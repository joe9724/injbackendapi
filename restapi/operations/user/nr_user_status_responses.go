// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injbackendapi/models"
)

// UserStatusOKCode is the HTTP code returned for type UserStatusOK
const UserStatusOKCode int = 200

/*UserStatusOK 成功，返回成功信息

swagger:response userStatusOK
*/
type UserStatusOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20010 `json:"body,omitempty"`
}

// NewUserStatusOK creates UserStatusOK with default headers values
func NewUserStatusOK() *UserStatusOK {
	return &UserStatusOK{}
}

// WithPayload adds the payload to the user status o k response
func (o *UserStatusOK) WithPayload(payload *models.InlineResponse20010) *UserStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user status o k response
func (o *UserStatusOK) SetPayload(payload *models.InlineResponse20010) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrUserStatusDefault 返回错误

swagger:response userStatusDefault
*/
type NrUserStatusDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrUserStatusDefault creates NrUserStatusDefault with default headers values
func NewNrUserStatusDefault(code int) *NrUserStatusDefault {
	if code <= 0 {
		code = 500
	}

	return &NrUserStatusDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user status default response
func (o *NrUserStatusDefault) WithStatusCode(code int) *NrUserStatusDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user status default response
func (o *NrUserStatusDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user status default response
func (o *NrUserStatusDefault) WithPayload(payload *models.Error) *NrUserStatusDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user status default response
func (o *NrUserStatusDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrUserStatusDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
