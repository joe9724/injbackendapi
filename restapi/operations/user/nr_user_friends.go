// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrUserFriendsHandlerFunc turns a function with the right signature into a user friends handler
type NrUserFriendsHandlerFunc func(NrUserFriendsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrUserFriendsHandlerFunc) Handle(params NrUserFriendsParams) middleware.Responder {
	return fn(params)
}

// NrUserFriendsHandler interface for that can handle valid user friends params
type NrUserFriendsHandler interface {
	Handle(NrUserFriendsParams) middleware.Responder
}

// NewNrUserFriends creates a new http.Handler for the user friends operation
func NewNrUserFriends(ctx *middleware.Context, handler NrUserFriendsHandler) *NrUserFriends {
	return &NrUserFriends{Context: ctx, Handler: handler}
}

/*NrUserFriends swagger:route GET /user/friends User userFriends

查看用户的好友

*/
type NrUserFriends struct {
	Context *middleware.Context
	Handler NrUserFriendsHandler
}

func (o *NrUserFriends) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrUserFriendsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
