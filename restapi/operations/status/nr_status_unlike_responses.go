// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injbackendapi/models"
)

// StatusUnlikeOKCode is the HTTP code returned for type StatusUnlikeOK
const StatusUnlikeOKCode int = 200

/*StatusUnlikeOK 成功，返回成功信息

swagger:response statusUnlikeOK
*/
type StatusUnlikeOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2004 `json:"body,omitempty"`
}

// NewStatusUnlikeOK creates StatusUnlikeOK with default headers values
func NewStatusUnlikeOK() *StatusUnlikeOK {
	return &StatusUnlikeOK{}
}

// WithPayload adds the payload to the status unlike o k response
func (o *StatusUnlikeOK) WithPayload(payload *models.InlineResponse2004) *StatusUnlikeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status unlike o k response
func (o *StatusUnlikeOK) SetPayload(payload *models.InlineResponse2004) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatusUnlikeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrStatusUnlikeDefault 返回错误

swagger:response statusUnlikeDefault
*/
type NrStatusUnlikeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrStatusUnlikeDefault creates NrStatusUnlikeDefault with default headers values
func NewNrStatusUnlikeDefault(code int) *NrStatusUnlikeDefault {
	if code <= 0 {
		code = 500
	}

	return &NrStatusUnlikeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the status unlike default response
func (o *NrStatusUnlikeDefault) WithStatusCode(code int) *NrStatusUnlikeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the status unlike default response
func (o *NrStatusUnlikeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the status unlike default response
func (o *NrStatusUnlikeDefault) WithPayload(payload *models.Error) *NrStatusUnlikeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status unlike default response
func (o *NrStatusUnlikeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrStatusUnlikeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
