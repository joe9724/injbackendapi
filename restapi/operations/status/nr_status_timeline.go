// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrStatusTimelineHandlerFunc turns a function with the right signature into a status timeline handler
type NrStatusTimelineHandlerFunc func(NrStatusTimelineParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrStatusTimelineHandlerFunc) Handle(params NrStatusTimelineParams) middleware.Responder {
	return fn(params)
}

// NrStatusTimelineHandler interface for that can handle valid status timeline params
type NrStatusTimelineHandler interface {
	Handle(NrStatusTimelineParams) middleware.Responder
}

// NewNrStatusTimeline creates a new http.Handler for the status timeline operation
func NewNrStatusTimeline(ctx *middleware.Context, handler NrStatusTimelineHandler) *NrStatusTimeline {
	return &NrStatusTimeline{Context: ctx, Handler: handler}
}

/*NrStatusTimeline swagger:route GET /status/timeline Status statusTimeline

获取动态列表

获取动态列表(0:热门  1:关注  2:好友  3:推荐  4:周边)

*/
type NrStatusTimeline struct {
	Context *middleware.Context
	Handler NrStatusTimelineHandler
}

func (o *NrStatusTimeline) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrStatusTimelineParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
