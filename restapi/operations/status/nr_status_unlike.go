// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrStatusUnlikeHandlerFunc turns a function with the right signature into a status unlike handler
type NrStatusUnlikeHandlerFunc func(NrStatusUnlikeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrStatusUnlikeHandlerFunc) Handle(params NrStatusUnlikeParams) middleware.Responder {
	return fn(params)
}

// NrStatusUnlikeHandler interface for that can handle valid status unlike params
type NrStatusUnlikeHandler interface {
	Handle(NrStatusUnlikeParams) middleware.Responder
}

// NewNrStatusUnlike creates a new http.Handler for the status unlike operation
func NewNrStatusUnlike(ctx *middleware.Context, handler NrStatusUnlikeHandler) *NrStatusUnlike {
	return &NrStatusUnlike{Context: ctx, Handler: handler}
}

/*NrStatusUnlike swagger:route POST /status/unlike Status statusUnlike

取消点赞

*/
type NrStatusUnlike struct {
	Context *middleware.Context
	Handler NrStatusUnlikeHandler
}

func (o *NrStatusUnlike) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrStatusUnlikeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
