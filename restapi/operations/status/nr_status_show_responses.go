// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injbackendapi/models"
)

// StatusShowOKCode is the HTTP code returned for type StatusShowOK
const StatusShowOKCode int = 200

/*StatusShowOK 成功，返回成功信息

swagger:response statusShowOK
*/
type StatusShowOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2008 `json:"body,omitempty"`
}

// NewStatusShowOK creates StatusShowOK with default headers values
func NewStatusShowOK() *StatusShowOK {
	return &StatusShowOK{}
}

// WithPayload adds the payload to the status show o k response
func (o *StatusShowOK) WithPayload(payload *models.InlineResponse2008) *StatusShowOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status show o k response
func (o *StatusShowOK) SetPayload(payload *models.InlineResponse2008) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatusShowOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrStatusShowDefault 返回错误

swagger:response statusShowDefault
*/
type NrStatusShowDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrStatusShowDefault creates NrStatusShowDefault with default headers values
func NewNrStatusShowDefault(code int) *NrStatusShowDefault {
	if code <= 0 {
		code = 500
	}

	return &NrStatusShowDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the status show default response
func (o *NrStatusShowDefault) WithStatusCode(code int) *NrStatusShowDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the status show default response
func (o *NrStatusShowDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the status show default response
func (o *NrStatusShowDefault) WithPayload(payload *models.Error) *NrStatusShowDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status show default response
func (o *NrStatusShowDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrStatusShowDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
