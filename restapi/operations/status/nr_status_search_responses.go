// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injbackendapi/models"
)

// StatusSearchOKCode is the HTTP code returned for type StatusSearchOK
const StatusSearchOKCode int = 200

/*StatusSearchOK 成功，返回成功信息

swagger:response statusSearchOK
*/
type StatusSearchOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2003 `json:"body,omitempty"`
}

// NewStatusSearchOK creates StatusSearchOK with default headers values
func NewStatusSearchOK() *StatusSearchOK {
	return &StatusSearchOK{}
}

// WithPayload adds the payload to the status search o k response
func (o *StatusSearchOK) WithPayload(payload *models.InlineResponse2003) *StatusSearchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status search o k response
func (o *StatusSearchOK) SetPayload(payload *models.InlineResponse2003) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *StatusSearchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrStatusSearchDefault 返回错误

swagger:response statusSearchDefault
*/
type NrStatusSearchDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrStatusSearchDefault creates NrStatusSearchDefault with default headers values
func NewNrStatusSearchDefault(code int) *NrStatusSearchDefault {
	if code <= 0 {
		code = 500
	}

	return &NrStatusSearchDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the status search default response
func (o *NrStatusSearchDefault) WithStatusCode(code int) *NrStatusSearchDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the status search default response
func (o *NrStatusSearchDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the status search default response
func (o *NrStatusSearchDefault) WithPayload(payload *models.Error) *NrStatusSearchDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the status search default response
func (o *NrStatusSearchDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrStatusSearchDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
