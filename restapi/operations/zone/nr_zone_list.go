// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrZoneListHandlerFunc turns a function with the right signature into a zone list handler
type NrZoneListHandlerFunc func(NrZoneListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrZoneListHandlerFunc) Handle(params NrZoneListParams) middleware.Responder {
	return fn(params)
}

// NrZoneListHandler interface for that can handle valid zone list params
type NrZoneListHandler interface {
	Handle(NrZoneListParams) middleware.Responder
}

// NewNrZoneList creates a new http.Handler for the zone list operation
func NewNrZoneList(ctx *middleware.Context, handler NrZoneListHandler) *NrZoneList {
	return &NrZoneList{Context: ctx, Handler: handler}
}

/*NrZoneList swagger:route GET /zone/list Zone zoneList

获取圈子列表(按修改时间倒序排列)

*/
type NrZoneList struct {
	Context *middleware.Context
	Handler NrZoneListHandler
}

func (o *NrZoneList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrZoneListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
