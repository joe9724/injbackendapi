// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrZoneShowHandlerFunc turns a function with the right signature into a zone show handler
type NrZoneShowHandlerFunc func(NrZoneShowParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrZoneShowHandlerFunc) Handle(params NrZoneShowParams) middleware.Responder {
	return fn(params)
}

// NrZoneShowHandler interface for that can handle valid zone show params
type NrZoneShowHandler interface {
	Handle(NrZoneShowParams) middleware.Responder
}

// NewNrZoneShow creates a new http.Handler for the zone show operation
func NewNrZoneShow(ctx *middleware.Context, handler NrZoneShowHandler) *NrZoneShow {
	return &NrZoneShow{Context: ctx, Handler: handler}
}

/*NrZoneShow swagger:route GET /zone/show Zone zoneShow

获取圈子详情

获取圈子详情(包含圈子成员个数、标签、最新公告)

*/
type NrZoneShow struct {
	Context *middleware.Context
	Handler NrZoneShowHandler
}

func (o *NrZoneShow) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrZoneShowParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
