// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injbackendapi/models"
)

// ZoneRefuseOKCode is the HTTP code returned for type ZoneRefuseOK
const ZoneRefuseOKCode int = 200

/*ZoneRefuseOK 成功，返回成功信息

swagger:response zoneRefuseOK
*/
type ZoneRefuseOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2004 `json:"body,omitempty"`
}

// NewZoneRefuseOK creates ZoneRefuseOK with default headers values
func NewZoneRefuseOK() *ZoneRefuseOK {
	return &ZoneRefuseOK{}
}

// WithPayload adds the payload to the zone refuse o k response
func (o *ZoneRefuseOK) WithPayload(payload *models.InlineResponse2004) *ZoneRefuseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the zone refuse o k response
func (o *ZoneRefuseOK) SetPayload(payload *models.InlineResponse2004) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ZoneRefuseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrZoneRefuseDefault 返回错误

swagger:response zoneRefuseDefault
*/
type NrZoneRefuseDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrZoneRefuseDefault creates NrZoneRefuseDefault with default headers values
func NewNrZoneRefuseDefault(code int) *NrZoneRefuseDefault {
	if code <= 0 {
		code = 500
	}

	return &NrZoneRefuseDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the zone refuse default response
func (o *NrZoneRefuseDefault) WithStatusCode(code int) *NrZoneRefuseDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the zone refuse default response
func (o *NrZoneRefuseDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the zone refuse default response
func (o *NrZoneRefuseDefault) WithPayload(payload *models.Error) *NrZoneRefuseDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the zone refuse default response
func (o *NrZoneRefuseDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrZoneRefuseDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
