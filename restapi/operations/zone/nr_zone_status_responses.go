// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injbackendapi/models"
)

// ZoneStatusOKCode is the HTTP code returned for type ZoneStatusOK
const ZoneStatusOKCode int = 200

/*ZoneStatusOK 成功，返回成功信息

swagger:response zoneStatusOK
*/
type ZoneStatusOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2003 `json:"body,omitempty"`
}

// NewZoneStatusOK creates ZoneStatusOK with default headers values
func NewZoneStatusOK() *ZoneStatusOK {
	return &ZoneStatusOK{}
}

// WithPayload adds the payload to the zone status o k response
func (o *ZoneStatusOK) WithPayload(payload *models.InlineResponse2003) *ZoneStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the zone status o k response
func (o *ZoneStatusOK) SetPayload(payload *models.InlineResponse2003) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ZoneStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrZoneStatusDefault 返回错误

swagger:response zoneStatusDefault
*/
type NrZoneStatusDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrZoneStatusDefault creates NrZoneStatusDefault with default headers values
func NewNrZoneStatusDefault(code int) *NrZoneStatusDefault {
	if code <= 0 {
		code = 500
	}

	return &NrZoneStatusDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the zone status default response
func (o *NrZoneStatusDefault) WithStatusCode(code int) *NrZoneStatusDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the zone status default response
func (o *NrZoneStatusDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the zone status default response
func (o *NrZoneStatusDefault) WithPayload(payload *models.Error) *NrZoneStatusDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the zone status default response
func (o *NrZoneStatusDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrZoneStatusDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
