// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrZoneRecommendHandlerFunc turns a function with the right signature into a zone recommend handler
type NrZoneRecommendHandlerFunc func(NrZoneRecommendParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrZoneRecommendHandlerFunc) Handle(params NrZoneRecommendParams) middleware.Responder {
	return fn(params)
}

// NrZoneRecommendHandler interface for that can handle valid zone recommend params
type NrZoneRecommendHandler interface {
	Handle(NrZoneRecommendParams) middleware.Responder
}

// NewNrZoneRecommend creates a new http.Handler for the zone recommend operation
func NewNrZoneRecommend(ctx *middleware.Context, handler NrZoneRecommendHandler) *NrZoneRecommend {
	return &NrZoneRecommend{Context: ctx, Handler: handler}
}

/*NrZoneRecommend swagger:route GET /zone/recommend Zone zoneRecommend

获取推荐圈子(按圈子点击总数排序)

*/
type NrZoneRecommend struct {
	Context *middleware.Context
	Handler NrZoneRecommendHandler
}

func (o *NrZoneRecommend) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrZoneRecommendParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
