// Code generated by go-swagger; DO NOT EDIT.

package zone

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injbackendapi/models"
)

// ZoneAggreeOKCode is the HTTP code returned for type ZoneAggreeOK
const ZoneAggreeOKCode int = 200

/*ZoneAggreeOK 成功，返回成功信息

swagger:response zoneAggreeOK
*/
type ZoneAggreeOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2004 `json:"body,omitempty"`
}

// NewZoneAggreeOK creates ZoneAggreeOK with default headers values
func NewZoneAggreeOK() *ZoneAggreeOK {
	return &ZoneAggreeOK{}
}

// WithPayload adds the payload to the zone aggree o k response
func (o *ZoneAggreeOK) WithPayload(payload *models.InlineResponse2004) *ZoneAggreeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the zone aggree o k response
func (o *ZoneAggreeOK) SetPayload(payload *models.InlineResponse2004) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ZoneAggreeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrZoneAggreeDefault 返回错误

swagger:response zoneAggreeDefault
*/
type NrZoneAggreeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrZoneAggreeDefault creates NrZoneAggreeDefault with default headers values
func NewNrZoneAggreeDefault(code int) *NrZoneAggreeDefault {
	if code <= 0 {
		code = 500
	}

	return &NrZoneAggreeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the zone aggree default response
func (o *NrZoneAggreeDefault) WithStatusCode(code int) *NrZoneAggreeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the zone aggree default response
func (o *NrZoneAggreeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the zone aggree default response
func (o *NrZoneAggreeDefault) WithPayload(payload *models.Error) *NrZoneAggreeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the zone aggree default response
func (o *NrZoneAggreeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrZoneAggreeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
