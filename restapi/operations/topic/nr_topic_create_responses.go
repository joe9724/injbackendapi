// Code generated by go-swagger; DO NOT EDIT.

package topic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "injbackendapi/models"
)

// TopicCreateOKCode is the HTTP code returned for type TopicCreateOK
const TopicCreateOKCode int = 200

/*TopicCreateOK 成功，返回成功信息

swagger:response topicCreateOK
*/
type TopicCreateOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2004 `json:"body,omitempty"`
}

// NewTopicCreateOK creates TopicCreateOK with default headers values
func NewTopicCreateOK() *TopicCreateOK {
	return &TopicCreateOK{}
}

// WithPayload adds the payload to the topic create o k response
func (o *TopicCreateOK) WithPayload(payload *models.InlineResponse2004) *TopicCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the topic create o k response
func (o *TopicCreateOK) SetPayload(payload *models.InlineResponse2004) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TopicCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrTopicCreateDefault 返回错误

swagger:response topicCreateDefault
*/
type NrTopicCreateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrTopicCreateDefault creates NrTopicCreateDefault with default headers values
func NewNrTopicCreateDefault(code int) *NrTopicCreateDefault {
	if code <= 0 {
		code = 500
	}

	return &NrTopicCreateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the topic create default response
func (o *NrTopicCreateDefault) WithStatusCode(code int) *NrTopicCreateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the topic create default response
func (o *NrTopicCreateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the topic create default response
func (o *NrTopicCreateDefault) WithPayload(payload *models.Error) *NrTopicCreateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the topic create default response
func (o *NrTopicCreateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrTopicCreateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
