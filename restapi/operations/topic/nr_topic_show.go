// Code generated by go-swagger; DO NOT EDIT.

package topic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrTopicShowHandlerFunc turns a function with the right signature into a topic show handler
type NrTopicShowHandlerFunc func(NrTopicShowParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrTopicShowHandlerFunc) Handle(params NrTopicShowParams) middleware.Responder {
	return fn(params)
}

// NrTopicShowHandler interface for that can handle valid topic show params
type NrTopicShowHandler interface {
	Handle(NrTopicShowParams) middleware.Responder
}

// NewNrTopicShow creates a new http.Handler for the topic show operation
func NewNrTopicShow(ctx *middleware.Context, handler NrTopicShowHandler) *NrTopicShow {
	return &NrTopicShow{Context: ctx, Handler: handler}
}

/*NrTopicShow swagger:route GET /topic/show Topic topicShow

获取话题详情

获取话题详情(包含动态条数、粉丝数、访问次数等信息)

*/
type NrTopicShow struct {
	Context *middleware.Context
	Handler NrTopicShowHandler
}

func (o *NrTopicShow) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrTopicShowParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
