// Code generated by go-swagger; DO NOT EDIT.

package topic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrTopicMatchHandlerFunc turns a function with the right signature into a topic match handler
type NrTopicMatchHandlerFunc func(NrTopicMatchParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrTopicMatchHandlerFunc) Handle(params NrTopicMatchParams) middleware.Responder {
	return fn(params)
}

// NrTopicMatchHandler interface for that can handle valid topic match params
type NrTopicMatchHandler interface {
	Handle(NrTopicMatchParams) middleware.Responder
}

// NewNrTopicMatch creates a new http.Handler for the topic match operation
func NewNrTopicMatch(ctx *middleware.Context, handler NrTopicMatchHandler) *NrTopicMatch {
	return &NrTopicMatch{Context: ctx, Handler: handler}
}

/*NrTopicMatch swagger:route GET /topic/match Topic topicMatch

根据话题名匹配话题详情

根据话题名匹配话题详情(包含动态条数、粉丝数、访问次数等信息)

*/
type NrTopicMatch struct {
	Context *middleware.Context
	Handler NrTopicMatchHandler
}

func (o *NrTopicMatch) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrTopicMatchParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
